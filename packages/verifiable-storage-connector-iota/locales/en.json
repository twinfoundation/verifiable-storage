{
	"info": {
		"iotaVerifiableStorageConnector": {
			"contractAlreadyDeployed": "Contract already deployed",
			"contractDeploymentStarted": "Contract deployment started",
			"contractDeploymentCompleted": "Contract deployment completed"
		}
	},
	"error": {
		"iotaVerifiableStorageConnector": {
			"namespaceMismatch": "The namespace in the urn \"{id}\" does not match the namespace of the IOTA Verifiable Storage connector \"{namespace}\"",
			"creatingFailed": "Creating the verifiable item failed",
			"updatingFailed": "Updating the verifiable item failed",
			"gettingFailed": "Getting the verifiable item failed",
			"removingFailed": "Removing the verifiable item failed",
			"packageIdNotFound": "The package ID \"{id}\" was not found",
			"storingTransactionFailed": "The transaction to store the data failed",
			"removingTransactionFailed": "The transaction to remove the data failed",
			"objectNotFound": "The object was not found",
			"notAuthorized": "The controller address \"{controllerAddress}\" does not match the creator \"{creator}\" of the object",
			"invalidIdFormat": "The verifiable storage URN \"{id}\" has an invalid format",
			"connectorNotStarted": "Please call start() before using this connector. Package ID: \"{packageId}\" is missing.",
			"deployTransactionFailed": "Deploying the contract failed with error: \"{error}\"",
			"startFailed": "Failed to start the IOTA Verifiable Storage connector.",
			"invalidGasBudget": "The gas budget must be greater than 0"
		},
		"iotaVerifiableStorageUtils": {
			"invalidVerifiableStorageIdFormat": "The verifiable storage ID \"{id}\" has an invalid format"
		}
	}
}
